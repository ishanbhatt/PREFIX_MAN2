apiVersion: apps/v1
kind: Deployment
metadata:
    name: backend-prod # Name of the deployment.
    labels:
      app: backend
      version: prod
spec:
    replicas: 1
    selector:
        matchLabels:
            app: backend  # all pods with celeb-matcher are part of this deployment, This must match with the pods name.
            version: prod  # Here we are labeling all the pods with celeb-matcher, failing to specify it will create issue

    template: # Describes the pods that will be used for the deployment.
        metadata:
            labels: # Same labels are set for all pods.
                app: backend
                version: prod
        spec:
            containers: # List of containers running in each pod.
                - name: backend
                  image: ishanbhatt/prefix-part2:test  # repo/image:tag
                  imagePullPolicy: IfNotPresent
                  env:
                    - name: DB_LOCATION
                      value: "/db-location"
                  volumeMounts:
                    - mountPath: "/db-location"
                      name: my-persistent-volumeclaim-name
            volumes:
              - name: my-persistent-volumeclaim-name
                persistentVolumeClaim:
                  claimName: my-persistent-volumeclaim
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: backend-canary # Name of the deployment.
    labels:
      app: backend
      version: canary
spec:
    replicas: 1
    selector:
        matchLabels:
            app: backend  # all pods with celeb-matcher are part of this deployment, This must match with the pods name.
            version: canary # Here we are labeling all the pods with celeb-matcher, failing to specify it will create issue
    template: # Describes the pods that will be used for the deployment.
        metadata:
            labels: # Same labels are set for all pods.
                app: backend
                version: canary
        spec:
            containers: # List of containers running in each pod.
                - name: backend
                  image: ishanbhatt/prefix-part2:retry  # repo/image:tag
                  imagePullPolicy: IfNotPresent
                  env:
                    - name: DB_LOCATION
                      value: "/db-location"
                  volumeMounts:
                    - mountPath: "/db-location"
                      name: my-persistent-volumeclaim-name
            volumes:
              - name: my-persistent-volumeclaim-name
                persistentVolumeClaim:
                  claimName: my-persistent-volumeclaim
